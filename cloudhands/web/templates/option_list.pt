<metal:option_list define-macro="option_list">
<section id="options">
<ul>
<li tal:repeat="(itemId, item) options.items()"
tal:attributes="
id 'options-{}'.format(itemId);
">
<dl
tal:define="class_ item.__class__.__name__.lower()"
tal:condition="item['_links'] | None"
tal:attributes="
id item['uuid'];
class class_">
<div tal:omit-tag="" tal:repeat="key item.public">
<dt tal:content="key"></dt>
<dd tal:content="item[key]"></dd>
</div>
</dl>
<div tal:omit-tag="" tal:repeat="action item.get('_links', [])">
<form class="pure-form pure-form-aligned"
tal:attributes="
action action.typ.format(action.ref);
method action.method;
name '{}-{}-{}-{}'.format(itemId, action.name, action.method, action.rel).replace(' ','').lower();">
<fieldset>
<legend tal:content="action.name"></legend>
<div
tal:repeat="field action.parameters"
tal:attributes="class 'pure-control-group'">
<p
tal:define="id_ '{}-{}-{}-{}'.format(itemId, action.name, action.rel, field.name).lower();">
<label tal:content="field.name.upper()
if field.name in ('cpu', 'jvo', 'ram')
else field.name.capitalize()"
tal:attributes="for id_">
</label>
<input
tal:condition="len(field.values) <= 1"
tal:attributes="
id id_;
name field.name;
value field.name if not field.values else field.values[0] ;
pattern field.regex.pattern;
required 'required' if field.required else None;
type 'hidden' if field.name in ('',) else 'password' if field.name == 'password' else 'text';"/>
<select
tal:condition="len(field.values) > 1"
tal:attributes="
id id_;
name field.name">
<option
tal:repeat="value field.values"
tal:content="value"
tal:attributes="
value value;
">
</option>
</select>
</p>
</div>
<div tal:attributes="class 'pure-control-group'">
<button tal:content="action.prompt"
tal:attributes="
type 'submit';
class 'pure-button pure-button-primary'"></button>
</div>
</fieldset>
</form>
</div>
</li>
</ul>
</section>
</metal:option_list>
